version: "3.8"

services:
  # Node.js application
  nodejs-app:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: nodejs-app
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=production
      - PORT=3010
      - SERVICE_NAME=nodejs-app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
    networks:
      - jaeger-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - jaeger-network
    restart: unless-stopped

  # Jaeger with SPM support
  jaeger:
    image: jaegertracing/jaeger:latest
    container_name: jaeger
    environment:
      - SPAN_STORAGE_TYPE=memory
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - PROMETHEUS_QUERY_TIMEOUT=30s
      - PROMETHEUS_QUERY_LOOKBACK=1h
    volumes:
      - ./jaeger-config.yaml:/etc/jaeger/config.yml
      - ./ui-config.json:/etc/jaeger/jaeger-ui.json
    command: ["--config", "/etc/jaeger/config.yml"]
    ports:
      - "16686:16686" # Jaeger UI
      - "8888:8888" # Jaeger metrics
      - "8889:8889" # Collector metrics
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    networks:
      - jaeger-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  jaeger-network:
    driver: bridge
